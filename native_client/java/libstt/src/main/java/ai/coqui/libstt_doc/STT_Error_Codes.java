/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ai.coqui.libstt;

public enum STT_Error_Codes {
  ERR_OK(0x0000),
  ERR_NO_MODEL(0x1000),
  ERR_INVALID_ALPHABET(0x2000),
  ERR_INVALID_SHAPE(0x2001),
  ERR_INVALID_SCORER(0x2002),
  ERR_MODEL_INCOMPATIBLE(0x2003),
  ERR_SCORER_NOT_ENABLED(0x2004),
  ERR_SCORER_UNREADABLE(0x2005),
  ERR_SCORER_INVALID_LM(0x2006),
  ERR_SCORER_NO_TRIE(0x2007),
  ERR_SCORER_INVALID_TRIE(0x2008),
  ERR_SCORER_VERSION_MISMATCH(0x2009),
  ERR_FAIL_INIT_MMAP(0x3000),
  ERR_FAIL_INIT_SESS(0x3001),
  ERR_FAIL_INTERPRETER(0x3002),
  ERR_FAIL_RUN_SESS(0x3003),
  ERR_FAIL_CREATE_STREAM(0x3004),
  ERR_FAIL_READ_PROTOBUF(0x3005),
  ERR_FAIL_CREATE_SESS(0x3006),
  ERR_FAIL_CREATE_MODEL(0x3007),
  ERR_FAIL_INSERT_HOTWORD(0x3008),
  ERR_FAIL_CLEAR_HOTWORD(0x3009),
  ERR_FAIL_ERASE_HOTWORD(0x3010);

  public final int swigValue() {
    return swigValue;
  }

  public static STT_Error_Codes swigToEnum(int swigValue) {
    STT_Error_Codes[] swigValues = STT_Error_Codes.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (STT_Error_Codes swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + STT_Error_Codes.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private STT_Error_Codes() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private STT_Error_Codes(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private STT_Error_Codes(STT_Error_Codes swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}
